#!/usr/bin/env python
import requests, urlparse, re
from BeautifulSoup import BeautifulSoup


class Scanner:
    def __init__(self, url, ignore_list):
        # Using Session to hold login connection
        self.session = requests.Session()
        self.target_url = url
        self.target_links = []
        self.links_to_ignore = ignore_list

    def extract_links_from(self, url):
        response = self.session.get(url)
        # Extracting all links from response
        return re.findall('(?:href=")(.*?)"', response.content)

    def crawl(self, url=None):
        # Checks if it's the first call or the recursive
        if url is None:
            url = self.target_url
        # Extract all links from url
        href_links = self.extract_links_from(url)
        for link in href_links:
            # Joining url with the link
            link = urlparse.urljoin(url, link)
            if "#" in link:
                link = link.split("#")[0]
            # appending each link once
            if self.target_url in link and link not in self.target_links \
                    and link not in self.links_to_ignore:  #
                self.target_links.append(link)
                print link
                # Checking recursively for all links
                self.crawl(link)

    def extract_forms(self, url):
        response = self.session.get(url)

        # Parsing HTML
        parsed_html = BeautifulSoup(response.content)
        return parsed_html.findAll("form")

    def submit_form(self, form, value, url):
        # Extracting each action from the form
        action = form.get("action")
        # The full url to submit
        post_url = urlparse.urljoin(url, action)
        method = form.get("method")

        input_list = form.findAll("input")
        post_data = {}
        for input_tag in input_list:
            input_name = input_tag.get("name")
            input_type = input_tag.get("type")
            input_value = input_tag.get("value")
            if input_type == "text":
                input_value = value

            post_data[input_name] = input_value
        if method == "POST":
            return self.session.post(post_url, data=post_data)
        return self.session.get(post_url, params=post_data)

    #
    def run(self):
        for link in self.target_links:
            forms = self.extract_forms(link)
            for form in forms:
                print"[+] Testing form in " + link
                is_vulnerable_to_xss = self.test_xss_in_form(form,link)
                if is_vulnerable_to_xss:
                    print "\n\n[***] XSS discovered in " + link + " in the following form"
                    print form

            if "=" in link:
                print "[+] Testing " + link
                # Check for vulnerabilities
                is_vulnerable_to_xss = self.test_xss_in_link(link)
                if is_vulnerable_to_xss:
                    print "\n\n[***] XSS discovered in " + link
    # Checking for XSS vulnerability in every link
    def test_xss_in_link(self, url):
        xss_test_script = "<sCript>alert('test');</scripT>"
        url = url.replace("=", "=" + xss_test_script)
        response = self.session.get(url)
        return xss_test_script in response.content

    # Checking for XSS vulnerability in every form
    def test_xss_in_form(self, form, url):
        xss_test_script = "<sCript>alert('test');</scripT>"
        response = self.submit_form(form, xss_test_script, url)
        return xss_test_script in response.content
